plugins {
    id 'java'
    id "io.freefair.lombok" version "4.1.5"
    id 'io.quarkus' version "${quarkusPluginVersion}"
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    compile project(":BaseCode:Core")
    testCompile project(path: ":BaseCode:Core", configuration: 'jacocoInstrumented')
    compile project(":BaseCode:ManagerIO")
    testCompile project(path: ":BaseCode:ManagerIO", configuration: 'jacocoInstrumented')
    compile project(":BaseCode:Stats")
    testCompile project(path: ":BaseCode:Stats", configuration: 'jacocoInstrumented')
    compile project(":WebServer:WebLibrary")
    testCompile project(path: ":WebServer:WebLibrary", configuration: 'jacocoInstrumented')

    //apache
    compile 'org.apache.commons:commons-text:1.8'

    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-smallrye-health'
    // https://quarkus.io/guides/microprofile-metrics
    implementation 'io.quarkus:quarkus-smallrye-metrics'
    implementation 'io.quarkus:quarkus-config-yaml'
    // https://quarkus.io/guides/mailer
    implementation 'io.quarkus:quarkus-mailer'
    implementation 'io.quarkus:quarkus-resteasy'
    implementation 'io.quarkus:quarkus-resteasy-jackson'
    // https://quarkus.io/guides/qute for templates
    // https://www.morling.dev/blog/quarkus-qute-test-ride/
    // https://quarkus.io/guides/writing-native-applications-tips#including-resources
    implementation 'io.quarkus:quarkus-qute'
    implementation 'io.quarkus:quarkus-resteasy-qute'
    // https://github.com/swagger-api/swagger-core/wiki/Swagger-2.X---Annotations
    implementation 'io.quarkus:quarkus-smallrye-openapi'
    implementation 'io.quarkus:quarkus-scheduler'
    // https://quarkus.io/guides/mongodb
    // https://quarkus.io/guides/mongodb-panache
    implementation 'io.quarkus:quarkus-mongodb-panache'
    // https://quarkus.io/guides/security-properties
    implementation 'io.quarkus:quarkus-elytron-security-properties-file'
    implementation 'io.quarkus:quarkus-elytron-security'
    // https://quarkus.io/guides/security-jwt 
    // https://vertx.io/docs/vertx-auth-jwt/java/
    implementation 'io.quarkus:quarkus-smallrye-jwt'

    implementation 'commons-io:commons-io:2.6'

    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.2.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.4.2'
    testImplementation 'org.jsoup:jsoup:1.13.1'
    nativeTestImplementation 'io.quarkus:quarkus-junit5'
    nativeTestImplementation 'io.rest-assured:rest-assured'
    nativeTestImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.2.0'

    // TODO:: think about using webjars to pull in libs for web pages; https://www.webjars.org/
    compile 'org.webjars:bootstrap:4.4.1-1'
}

group 'com.gjs.taskTimekeeper.webServer'
version = '1.0.0.278'
String projectPropertiesFileName = "application.yml";
String openApiConfigFileName = "META-INF/" + "openapi.yml"
String projectResourcesDir = "$projectDir/src/main/resources/";

task writeOpenApiFile() {
    doLast {
        new File(projectResourcesDir + openApiConfigFileName).text = """
#################################################################################
#                                                                               #
# Open API base information.                                                    #
#   Template api details to be merged with the ones generated from annotations. #
#                                                                               #
# AUTOGENERATED BY GRADLE AT BUILD TIME. DO NOT EDIT THIS FILE                  #
#                                                                               #
#################################################################################

openapi: 3.0.1
info:
  title: "Task Timekeeper WebServer API"
  version: "$version"
  contact:
    name: "Greg Stewart"
    url: "https://gjstewart.net"
    email: "contact@gjstewart.net"
# https://swagger.io/docs/specification/authentication/
# https://swagger.io/docs/specification/authentication/bearer-authentication/
components:
  securitySchemes:
    JwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - JwtAuth: []
paths:
"""
    }
}

task writePropertiesFile() {
    doLast {
        new File(projectResourcesDir + projectPropertiesFileName).text = """
################################################################
#                                                              #
# Main properties file. Contains values used in the server.    #
#                                                              #
# AUTOGENERATED BY GRADLE AT BUILD TIME. DO NOT EDIT THIS FILE #
#                                                              #
################################################################

version: $version
buildtime: ${ZonedDateTime.now().toString()}
# Versions of the libraries used
lib:
  base:
    core:
      version: ${project(":BaseCode:Core").version}
    managerIO:
      version: ${project(":BaseCode:ManagerIO").version}
    stats:
      version: ${project(":BaseCode:Stats").version}
  server:
    webLibrary:
      version: ${project(":WebServer:WebLibrary").version}

quarkus:
  mongodb:
    database: task-timekeeper
    application-name: task-timekeeper-server

validation:
  password:
    rules:
      minLength: 8
      includeCaps: true
      includeSpecialChars: true
      includeNumbers: true

mp:
  jwt:
    verify:
      privatekey:
        location: security/packagedPrivateKey.pem
      publickey:
        location: security/PackagedPublicKeyPkcs8.pem
      issuer: \${runningInfo.organization} - \${runningInfo.serverName} Task Timekeeper Server
    expiration:
      default: 86400 # 1 day
      extended: 2678400 # 1 month

user:
  new:
    autoApprove: false

runningInfo:
  serverName: \${runningInfo.organization}
  organization: The Testing Organization
  hostname: localhost
  port: \${quarkus.http.port}
"""
    }
}

task deleteGenertatedResources(type: Delete) {
    delete fileTree(projectResourcesDir) {
        include "**/$openApiConfigFileName"
        include "**/$projectPropertiesFileName"
    }
}

clean {
    dependsOn 'deleteGenertatedResources';
}

compileJava {
    options.compilerArgs << '-parameters'
    println "WebServer version at compile time: " + version
    dependsOn 'writePropertiesFile';
    dependsOn 'writeOpenApiFile';

    dependsOn ':BaseCode:Core:test'
    dependsOn ':BaseCode:ManagerIO:test'
    dependsOn ':BaseCode:Stats:test'
    dependsOn ':WebServer:WebLibrary:test'
    dependsOn 'incrementBuildVersion';
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

test {
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

// stop lombok from overwriting its own config
generateLombokConfig.enabled = false
