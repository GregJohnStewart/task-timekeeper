package com.gjs.taskTimekeeper.desktopApp.runner.gui.forms;

import com.gjs.taskTimekeeper.desktopApp.config.ConfigKeys;
import com.gjs.taskTimekeeper.desktopApp.config.Configuration;
import com.gjs.taskTimekeeper.desktopApp.runner.gui.util.listener.OpenDialogBoxOnClickListener;
import com.gjs.taskTimekeeper.desktopApp.runner.gui.util.listener.OpenUrlOnClickListener;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.swing.*;
import java.awt.*;
import java.net.URI;

/**
 * https://www.jetbrains.com/help/idea/designing-gui-major-steps.html
 */
public class MainGui {
	private static final Logger LOGGER = LoggerFactory.getLogger(MainGui.class);

	private static final String ABOUT_MESSAGE = "Task Timekeeper\nVersion: " + Configuration.getProperty(ConfigKeys.APP_VERSION, String.class) +
		"\nUsing Lib version: " + Configuration.getProperty(ConfigKeys.LIB_VERSION, String.class) +
		"\n\nThis program is made for you to easily keep track of time spent on tasks." +
		"\nFor help, please visit the Github for this project." +
		"\nPlease consider donating if you find this program was helpful to you!";

	private JFrame mainFrame;

	private JPanel mainPanel;
	private JLabel testLabel;

	private JMenuBar mainMenuBar;

	public MainGui(Image icon, String appTitle) {
		LOGGER.info("Starting GUI.");
		//setup main frame
		this.mainFrame = new JFrame(appTitle);
		this.mainFrame.setIconImage(icon);
		this.mainFrame.setContentPane(this.mainPanel);
		this.mainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		//TODO:: tell action handler to not kill process when window closes. not a problem until we do the system tray icon.

		//setup menu bar
		this.mainMenuBar = new JMenuBar();
		//File
		JMenu menu = new JMenu("File");
		JMenuItem menuItem = new JMenuItem("Save (ctrl + s)");
		menu.add(menuItem);
		menu.addSeparator();
		menuItem = new JMenuItem("Close");
		menu.add(menuItem);
		this.mainMenuBar.add(menu);
		//view
		menu = new JMenu("View");
		menuItem = new JMenuItem("Periods");
		menu.add(menuItem);
		menuItem = new JMenuItem("Tasks");
		menu.add(menuItem);
		this.mainMenuBar.add(menu);
		//info
		menu = new JMenu("Info");
		menuItem = new JMenuItem("About");
		menuItem.addMouseListener(
			new OpenDialogBoxOnClickListener(
				this.mainFrame,
				ABOUT_MESSAGE,
				"About Task Timekeeper",
				JOptionPane.INFORMATION_MESSAGE,
				icon
			)
		);
		menu.add(menuItem);
		menu.addSeparator();
		menuItem = new JMenuItem("Github");
		menuItem.addMouseListener(
			new OpenUrlOnClickListener(
				URI.create(Configuration.getProperty(ConfigKeys.GITHUB_REPO_URL, String.class))
			)
		);
		menu.add(menuItem);
		menuItem = new JMenuItem("Donate");
		menuItem.addMouseListener(
			new OpenUrlOnClickListener(
				URI.create(Configuration.getProperty(ConfigKeys.DONATE_URL, String.class))
			)
		);
		menu.add(menuItem);
		this.mainMenuBar.add(menu);

		this.mainFrame.setJMenuBar(this.mainMenuBar);

		this.mainFrame.pack();
		this.mainFrame.setVisible(true);

		LOGGER.info("Opened window");
	}


	public boolean stillOpen() {
		return this.mainFrame.isVisible();
	}

	{
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
		$$$setupUI$$$();
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		mainPanel = new JPanel();
		mainPanel.setLayout(new GridLayoutManager(1, 1, new Insets(5, 5, 5, 5), -1, -1, true, true));
		mainPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLoweredBevelBorder(), null));
		testLabel = new JLabel();
		testLabel.setText("TEST");
		mainPanel.add(testLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$() {
		return mainPanel;
	}

}
