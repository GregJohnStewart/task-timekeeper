import java.text.SimpleDateFormat

plugins {
    id 'java'
    id 'application'
    // for making deb and rpm packages https://github.com/nebula-plugins/gradle-ospackage-plugin/wiki/Usage-Example
    //id "nebula.ospackage-application" version "6.2.1"

    //https://github.com/i-net-software/SetupBuilder
    id "de.inetsoftware.setupbuilder" version "4.8.6"
}

sourceCompatibility = 1.11
//config for the application plugin
version = '0.1'
mainClassName = "com.gjs.taskTimekeeper.desktopApp.Main"
applicationName = "TaskTimekeeper"

repositories {
    mavenCentral()
}

dependencies {
    compile project(":BaseCode")

    //for processing command line arguments
    compile 'args4j:args4j:2.33'
    compile 'args4j:args4j-site:2.33'

    //for the intellij swing forms
    compile 'com.intellij:forms_rt:7.0.3'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

run {
    /*
	 * So we can have arguments passed to the program in gradle
	 *
	 * Example of usage:
	 *      gradle :DesktopApp:run -PappArgs="['-h']"
	 */
    if (project.hasProperty("appArgs")) {
        args Eval.me(appArgs)
    }
}

String projectPropertiesFile = "project.properties";
String projectPropertiesDir = "$projectDir/src/main/resources/";

/**
 * Writes out the version configuration for the app.
 */
//noinspection GroovyAssignabilityCheck
task writeVersionConfig() {

    doLast {
        new File(projectPropertiesDir + projectPropertiesFile).text = """
################################################################
#                                                              #
# Main properties file. Contains values used in the app.       #
#                                                              #
# AUTOGENERATED BY GRADLE AT BUILD TIME. DO NOT EDIT THIS FILE #
#                                                              #
################################################################

# the name of the app
app.name = $applicationName
# the version of the app code
app.version = $version
# the time of build
app.buildtime = ${ZonedDateTime.now().toString()}
# Version of the library used
lib.version = ${project(":BaseCode").version}
# default save file location
default.configFile = {HOME}/.timeKeeper/config.cfg
default.saveFile = {HOME}/.timeKeeper/save.tks
# default run mode
default.runMode = SINGLE

# Help url's
urls.github = https://github.com/GregJohnStewart/task-timekeeper
urls.desktopReadme = https://github.com/GregJohnStewart/task-timekeeper/tree/master/DesktopApp
"""
    }
}

task deleteVersionConfig(type: Delete) {
    delete fileTree(projectPropertiesDir) {
        include "**/$projectPropertiesFile"
    }
}

compileJava {
    dependsOn ':BaseCode:test'
    dependsOn 'writeVersionConfig';
}

clean {
    dependsOn 'deleteVersionConfig';
}

/*
 * Setup for building .deb, .dmg, .msi, and .rpm installers.
 */
setupBuilder {

    vendor = 'Greg Stewart'
    appIdentifier = applicationName  // "TaskTimekeeper"
    this.version = version // '0.1'

    application = "Task Timekeeper"
    description = 'A program for keeping track of time spent on tasks.'
    icons = "src/main/resources/test-icon.icns"

    licenseFile = "../LICENSE"

    from jar.outputs

    System.out.println("Jar outputs:")
    for(File f : jar.outputs.files.files){
        System.out.println("\t" + f)
    }

    //bundleJre = 1.11 // not working on linux systems :(
    mainClass = mainClassName // "com.gjs.taskTimekeeper.desktopApp.Main"
    mainJar = 'DesktopApp-' + version + '.jar'

}